- name: Install core stuff from apt (1st)
  become: true
  apt:
    name: [ 'flatpak', 'playerctl', 'tmux', 'xclip', 'fd-find', 'inotify-tools', 'unzip' ]
  tags:
    - install
    - shell
    - core
- name: Add flathub to flatpak
  community.general.flatpak_remote:
    name: flathub
    state: present
    flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
    method: user
  tags:
    - install
    - core
- name: Install desktop only core stuff from apt
  become: true
  apt:
    name: [ 'feh', 'xterm', 'i3', 'maim', 'imagemagick', 'xdotool', 'rofi', 'qbittorrent', 'compton', 'unclutter-xfixes' ]
  when: needs_desktop
  tags:
    - desktop
    - install
    - core
- name: Check if lucide font is already installed
  shell: fc-list | grep "Hack Nerd Font"
  register: font_check_result
  changed_when: false
  ignore_errors: true
  when: needs_desktop
  tags:
   - desktop
   - install
   - core
- name: Set fact if lucide installed
  set_fact:
    font_installed: "{{ font_check_result.rc == 0 }}"
  when: needs_desktop
  tags:
    - desktop
    - install
    - core
- name: Download Nerd Fonts from GitHub
  get_url:
    url: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/Hack.tar.xz
    dest: /tmp/
  when: needs_desktop and not font_installed
  tags:
    - desktop
    - install
    - core
- name: Ensure the extraction path exists
  file:
    path: /tmp/Hack
    state: directory
  when: needs_desktop and not font_installed
  tags:
    - desktop
    - install
    - core
- name: Extract Hack Nerd Font
  unarchive:
    src: /tmp/Hack.tar.xz
    dest: /tmp/Hack
  when: needs_desktop and not font_installed
  tags:
    - desktop
    - install
    - core
- name: Move .ttf files to /usr/local/share/fonts/
  become: true
  copy:
    src: "{{ item }}"
    dest: /usr/local/share/fonts/
    remote_src: yes
  with_fileglob: "/tmp/Hack/*.ttf"
  when: needs_desktop and not font_installed
  tags:
    - desktop
    - install
    - core
- name: Reload fonts cache
  become: true
  command: fc-cache -f -v
  when: needs_desktop and not font_installed
  tags:
    - desktop
    - install
    - core
- name: Download greenclip
  become: true
  when: needs_desktop
  get_url:
    url: https://github.com/erebe/greenclip/releases/download/v4.2/greenclip
    dest: "{{ lookup('env', 'HOME') }}/.local/bin/greenclip"
    mode: "0755"
  tags:
    - desktop
    - install
    - core
- name: Download kanata
  become: true
  when: needs_desktop
  get_url:
    url: https://github.com/jtroo/kanata/releases/download/v1.6.1/kanata
    dest: "{{ lookup('env', 'HOME') }}/.local/bin/kanata"
    mode: "0755"
  tags:
    - desktop
    - install
    - core
- name: Check if 'uinput' group exists for kanata
  shell: grep -E "^uinput" /etc/group
  when: needs_desktop
  register: group_check
  ignore_errors: true
  tags:
    - desktop
    - install
    - core
- name: Create 'uinput' group if missing
  become: true
  group:
    name: uinput
  when: needs_desktop and group_check.rc != 0
  tags:
    - desktop
    - install
    - core
- name: Add current user to 'input' and 'uinput' groups
  become: true
  user:
    name: "{{ current_user }}"
    append: yes
    groups:
      - input
      - uinput
  when: needs_desktop and group_check.rc != 0
  tags:
    - desktop
    - install
    - core
- name: Add udev rule for uinput
  become: true
  lineinfile:
    path: /etc/udev/rules.d/99-uinput.rules
    line: "KERNEL==\"uinput\", MODE=\"0660\", GROUP=\"uinput\", OPTIONS+=\"static_node=uinput\""
  when: needs_desktop and group_check.rc != 0
  tags:
    - desktop
    - install
    - core
- name: Load uinput module
  become: true
  command: modprobe uinput
  when: needs_desktop and group_check.rc != 0
  tags:
    - desktop
    - install
    - core
- name: Download brightnessclt
  become: true
  when: needs_laptop
  apt:
    name: brightnessctl
  tags:
    - laptop
    - install
    - core
- name: Modify brightessctl permission
  become: true
  when: needs_laptop
  shell: chmod +s $(which brightnessctl)
  tags:
    - laptop
    - install
    - core
- name: Install fmn (node and npm version manager)
  shell: curl -fsSL https://fnm.vercel.app/install | bash -s -- --skip-shell
  tags:
    - install
    - core
- name: Update package list
  become: true
  apt:
    update_cache: yes
  tags:
    - install
    - core
- name: Download Neovim tarball
  become: true
  get_url:
    url: "https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.tar.gz"
    dest: "/tmp/nvim-linux64.tar.gz"
  tags:
    - install
    - core
- name: Ensure /opt/nvim directory exists
  become: true
  file:
    path: "/opt/nvim-linux64"
    state: directory
  tags:
    - install
    - core
- name: Remove existing /opt/nvim directory
  become: true
  file:
    path: "/opt/nvim-linux64"
    state: absent
  tags:
    - install
    - core
- name: Extract Neovim tarball to /opt
  become: true
  unarchive:
    src: "/tmp/nvim-linux64.tar.gz"
    dest: "/opt"
    remote_src: yes
  tags:
    - install
    - core
- name: Install neovim kickstart dependencies
  become: true
  apt:
    name: [ "make", "gcc", "ripgrep", "unzip", "git", "xclip" ]
  tags:
    - install
    - core
